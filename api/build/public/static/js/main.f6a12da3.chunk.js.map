{"version":3,"sources":["logos/Marca-03.png","config.js","controllers/acount/perfil.js","controllers/home.js","controllers/acount/login.js","controllers/acount/registro.js","controllers/curriculum/cargarCv.js","controllers/acount/mailConfirmado.js","controllers/curriculum/verCvs.js","controllers/acount/cambiarPassRecupero.js","app.js","serviceWorker.js","index.js"],"names":["module","exports","config","url","Perfil","props","useState","editar","toggleEditar","id","razonSocial","rol","user","setUser","descripcion","setDescripcion","setRazonSocial","canFollow","setCanFollow","vinculos","setVinculos","visitas","setVisitas","telefono","setTelefono","email","setEmail","tags","setTags","titulo","setTitulo","slogan","setSlogan","sitioWeb","setSitioWeb","direccion","setDireccion","seguido","setSeguido","propietario","setPropietario","profesion","setProfesion","useEffect","window","location","hash","slice","split","fetch","headers","Authorization","localStorage","session","then","data","json","d","direccionLocalidad","Fragment","Navbar","bg","expand","variant","className","Brand","href","Container","Row","Col","style","maxHeight","width","src","imagenPortada","canEdit","Button","onClick","confirm","method","body","JSON","stringify","status","console","log","size","ModalFotoPerfil","idUser","ModalFotoPortada","FormCambioContrasenia","userId","md","Card","borderTop","Body","textAlign","imagenPerfil","Form","Group","value","onChange","e","target","map","t","Badge","key","trim","Title","c","dangerouslySetInnerHTML","__html","show","setShow","aspect","crop","setCrop","pathTempFoto","setPathTempFoto","originalName","setOriginalNAme","Modal","onHide","Header","closeButton","type","imagen","formData","FormData","Headers","append","result","path","subirImagen","files","newCrop","percentCrop","Footer","name","reload","handleClose","pass","setPass","rptPass","setRptPass","b","m","border","setBorder","guardar","length","onSubmit","Control","required","Home","FormGroup","placeholder","RecuperarCuenta","userName","setUserName","enviado","setEnviado","preventDefault","Login","alert","setAlert","token","catch","err","Registro","React","rPass","setrPass","rPassBorder","setrPassBorder","l","rSocialBorder","setrSocialBorder","registrado","setRegistrado","Subtitle","htmlFor","minLength","maxLength","min","onKeyUp","RecuperoClave","res","CargaCv","nombre","setNombre","archivo","setArchivo","claveSeguridad","setClaveSeguridad","classBorder","setClassBorder","fd","autoComplete","accept","MailConfirmado","Text","columnas","selector","VerCvs","setData","fechaAlta","columns","theme","pagination","CambiarPassRecupero","newPass","setNewPass","rptNewPass","setRptNewPass","borde","setBorde","clave","setBody","retBody","rutaSliced","isNaN","addEventListener","logoSitio","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","alignRight","Item","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f6a12da3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Marca-03.c85b2189.png\";","let config = {url:\"\"};\n\nconfig = process.env.NODE_ENV === \"production\" ?\n    {\n        url:\"\"\n    }\n    :\n    {\n        url:\"http://localhost:5000\"\n    }\n\nexport default config;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Col, Row, Card, Button, Image, Form, ButtonGroup, Badge, Modal, Navbar } from 'react-bootstrap';\nimport Jodit from 'jodit-react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport {FaPlus} from 'react-icons/fa'\n\nimport config from '../../config'; \n\nconst Perfil = (props)=>{\n    const [editar, toggleEditar] = useState(false)\n    const [user, setUser] = useState({id:\"\",razonSocial:\"\",rol:\"\"});\n    const [descripcion,setDescripcion] = useState(\"\");\n    const [razonSocial, setRazonSocial] = useState(\"\");\n    const [canFollow, setCanFollow] = useState(false);\n    const [vinculos, setVinculos] = useState(0);\n    //const [reputacion, setReputacion] = useState(0);\n    const [visitas, setVisitas] = useState(0);\n    const [telefono, setTelefono] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [tags, setTags] = useState(\"\"); \n    const [titulo, setTitulo] = useState(\"\"); \n    const [slogan, setSlogan] = useState(\"\"); \n    const [sitioWeb, setSitioWeb] = useState(\"\"); \n    const [direccion, setDireccion] = useState(\"\"); \n    const [seguido, setSeguido] = useState(true); \n    const [propietario, setPropietario] = useState(\"\"); \n    const [profesion, setProfesion] = useState(\"\"); \n\n\n    useEffect(()=>{ \n        let id = window.location.hash.slice(1).split(\"/\")[1]\n        if(!user.id)\n        fetch(config.url+'/api/acount/profile/'+id,{ \n            headers:{ \n                Authorization:localStorage.session\n            }\n        })\n        .then(data => {\n            data.json()\n            .then(d =>  {\n                setUser(d)\n                setDescripcion(d.descripcion ? d.descripcion : \"\")\n                setRazonSocial(d.razonSocial) \n                setVinculos(d.vinculos)\n                setDireccion(d.direccionLocalidad)\n                setVisitas(d.visitas)\n                setTelefono(d.telefono)\n                setEmail(d.email)\n                setTags(d.tags ? d.tags : \"\")\n                setTitulo(d.titulo ? d.titulo : \"\")\n                setSlogan(d.slogan ? d.slogan : \"\")\n                setSitioWeb(d.sitioWeb ? d.sitioWeb : \"\")\n                setSeguido(d.seguido)\n                setPropietario(d.propietario)\n                setCanFollow(d.canFollow)\n                setProfesion(d.profesion)\n            }) \n        })  \n    })\n\n    const guardar = ()=>{\n        if(window.confirm(\"¿Seguro que desea aplicar los cambios?\"))\n        fetch(config.url+\"/api/acount/profile/\"+user.id,{\n            method:\"put\",\n            headers:{\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                Authorization:localStorage.session\n            },\n            body:JSON.stringify({\n                razonSocial,\n                slogan,\n                titulo,\n                telefono,\n                email,\n                sitioWeb,\n                descripcion,\n                tags,\n                direccion\n            })\n        })\n        .then(data => {\n            if(data.status == 200){\n                toggleEditar(false) \n            }\n            else\n                console.log(data)\n        })\n    }\n\n    const seguir = ()=>{\n\n        fetch(config.url+\"/api/acount/seguir/\"+user.id,{\n            method:\"post\",\n            headers:{\n                Authorization:localStorage.session\n            }\n        })\n        .then(data => {\n            if(data.status == 200){\n                setSeguido(true)\n            }\n        })\n    }\n    const dejarSeguir = ()=>{\n        \n        fetch(config.url+\"/api/acount/seguir/\"+user.id,{\n            method:\"delete\",\n            headers:{\n                Authorization:localStorage.session\n            }\n        })\n        .then(data => {\n            if(data.status == 200){\n                setSeguido(false)\n            }\n        })\n    }\n    \n    return(\n        <React.Fragment>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-2\">\n                <Navbar.Brand href=\"#home\">O</Navbar.Brand>                \n            </Navbar> \n            <Container>\n                <Row>\n                    <Col className=\"d-flex justify-content-center\">\n                        <img style={{maxHeight:300}} width=\"100%\" src={config.url+user.imagenPortada}></img>\n                    </Col>\n                </Row>\n                {user.canEdit ? <Row className='py-3'>\n                    <Col>\n                        {!editar? (\n                            <React.Fragment>\n                                <Button onClick={()=>toggleEditar(true)}\n                                    className=\"mr-3 rounded-0\" variant='outline-primary' size='sm'>Editar Información</Button>\n                                {/* <Button className=\"mr-3 rounded-0\" variant='outline-primary' size='sm'>Cambiar foto de portada</Button> */}\n                                <ModalFotoPerfil idUser={user.id}></ModalFotoPerfil>\n                                <ModalFotoPortada idUser={user.id}></ModalFotoPortada>\n                                <FormCambioContrasenia userId={user.id}/>\n                            </React.Fragment>\n                            )\n                            : <Button onClick={guardar}\n                            className=\"mr-3 rounded-0\" variant='outline-warning' size='sm'>Guardar</Button>\n                        }\n                    </Col>\n                </Row> : <div className=\"pb-4\"></div>}\n                <Row>\n                    <Col md=\"5\">\n                        <Card className='rounded-0' style={{borderTop:\"solid 3px #184ca1\"}}> \n                            <Card.Body style={{textAlign:\"center\"}}>\n                                <img\n                                    className='rounded-circle'\n                                    width=\"33%\" \n                                    src={config.url+user.imagenPerfil} \n                                /> \n                                {\n                                    !editar ? \n                                    <h5>{razonSocial}</h5> : \n                                    <Form.Group>\n                                        <label>Razón Social</label>\n                                        <input className=\"form-control-sm form-control\" value={razonSocial} onChange={e => setRazonSocial(e.target.value)}/>\n                                    </Form.Group>\n                                }\n                                {\n                                    !editar ? \n                                    <small>{profesion}</small> : \n                                    <Form.Group>\n                                        {profesion? <label>Profesion</label>: null}\n                                        <input className=\"form-control-sm form-control\" value={profesion} onChange={e => setProfesion(e.target.value)}/>\n                                    </Form.Group>\n                                }\n                                {\n                                    !propietario && !seguido && canFollow ? \n                                        <>\n                                            <br/>\n                                            <Button onClick={seguir}\n                                                className='rounded-0' variant='success' size='sm'>\n                                            <FaPlus></FaPlus> Agregar a mis proveedores</Button>\n                                        </>\n                                    : !propietario && seguido && canFollow ?\n                                        <>\n                                            <br/>\n                                            <Button onClick={dejarSeguir}\n                                                className='rounded-0' variant='danger' size='sm'>\n                                                Quitar de mis proveedores</Button>\n                                        </>\n                                        :null\n                                } \n                                <hr/>\n                                <Row>\n                                    <Col>\n                                        <h3>{vinculos}</h3>Vínculos Creados\n                                    </Col>\n                                    <Col>\n                                        <h3>{visitas}</h3>Visitas\n                                    </Col> \n                                </Row> \n                                <hr></hr>\n                                <Row className=\"pb-2\">\n                                    <Col>\n                                        {!editar ? \"📞\"+ telefono : \n                                        <Form.Group>\n                                            <label>Teléfono de contacto</label>\n                                            <input className=\"form-control-sm form-control\" value={telefono} onChange={e => setTelefono(e.target.value)}/>\n                                        </Form.Group>}\n                                    </Col>  \n                                </Row>\n                                <Row>\n                                    <Col>\n                                    {!editar ? email : \n                                    <Form.Group>\n                                    <label>Email</label>\n                                    <input className=\"form-control-sm form-control\" value={email} onChange={e => setEmail(e.target.value)}/>\n                                    </Form.Group>}\n                                    </Col>  \n                                </Row> <br></br>\n                                <Row>\n                                    <Col>\n                                    {!editar ? direccion : \n                                    <Form.Group>\n                                    <label>Dirección y localidad</label>\n                                    <input className=\"form-control-sm form-control\" value={direccion} onChange={e => setDireccion(e.target.value)}/>\n                                    </Form.Group>}\n                                    </Col>  \n                                </Row> <br></br>\n                                <Row> \n                                    <Col>\n                                        {!editar ? <a className=\"btn btn-info btn-sm rounded-0\" target='blank_' href={sitioWeb}>Sitio Web oficial</a> : \n                                            <Form.Group>\n                                                <label>Sitio Web</label>\n                                                <input className=\"form-control-sm form-control\" value={sitioWeb} onChange={e => setSitioWeb(e.target.value)}/>\n                                            </Form.Group>\n                                        }\n                                    </Col>  \n                                </Row>\n                                <hr></hr>\n                                <Row>\n                                    <Col>\n                                        {!editar?\n                                            tags.split(\",\").map(t => <Badge key={t} className=\"mr-2\" variant=\"secondary\">{t.trim()}</Badge>)\n                                            :\n                                            <Form.Group>\n                                                <label>Palabras clave separadas por comas ,</label>\n                                                <input className=\"form-control-sm form-control\" value={tags} onChange={e => setTags(e.target.value)}/>\n                                                <small className='text-danger'>Super importante para que te encuentren en las búsquedas</small>\n                                            </Form.Group>\n                                        } \n                                    </Col>\n                                </Row>\n                                \n                                \n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md=\"7\">\n                        <Card className='rounded-0' style={{borderTop:\"solid 3px #184ca1\"}}>\n                            <Card.Body >\n                            {!editar? <Card.Title>{titulo}</Card.Title> : \n                            <Form.Group>\n                                <label>Título de tu rubro</label>\n                                <input className='form-control-sm form-control' value={titulo} onChange={e=> setTitulo(e.target.value)}/>\n                            </Form.Group>}\n                            <hr></hr>\n                            {editar ? \n                                <Form.Group>\n                                    <label>Descripcion extensa de tu negocio</label>\n                                    <Jodit \n                                            value={descripcion}\n                                            onChange={c => setDescripcion(c)}\n                                        /> \n                                    >\n                                </Form.Group>\n                                :\n                                <div dangerouslySetInnerHTML={{__html: descripcion}} />\n                            }\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default Perfil;\n\nfunction ModalFotoPerfil(props) {\n    const [show, setShow] = useState(false);\n    const [crop, setCrop] = useState({ aspect: 16 / 16 });  \n    const [pathTempFoto,setPathTempFoto] = useState(\"\");\n    const [originalName, setOriginalNAme] = useState(\"\");\n    const subirImagen = (imagen)=>{ \n        let formData = new FormData();\n        let headers = new Headers();\n        headers.append(\"Authorization\", localStorage.session)\n        formData.append(\"temp\", imagen); \n\n        fetch(config.url+\"/api/acount/profilephoto/\"+props.idUser,{\n            method:\"post\",\n            headers,\n            body: formData\n        })\n        .then(result => result.json())\n        .then(result =>{\n            console.log(result.originalName)\n            setOriginalNAme(result.originalName)\n            setPathTempFoto(config.url+result.path)\n        })\n    }\n    const sendResizeImage = (name)=>{\n        fetch(config.url+\"/api/acount/resizephotoperfil/\"+props.idUser,{\n            method:\"post\",\n            headers:{\n                Authorization:localStorage.session,\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                crop,\n                originalName:name\n            })\n        })\n        .then(result => {\n            if(result.status == 200)\n            {\n                window.location.reload()\n            }\n        }) \n    }\n\n    return (\n        <>\n        <Button onClick={() => setShow(true)} className=\"mr-3 rounded-0\" variant='outline-primary' size='sm'>Cambiar foto de perfil</Button>\n\n        <Modal show={show} onHide={()=>setShow(false)}>\n            <Modal.Header closeButton>\n                <Modal.Title>imagen</Modal.Title>\n            </Modal.Header>\n            <Modal.Body> \n                    <input type=\"file\" onChange={e=>{ \n                        subirImagen(e.target.files[0])\n                    }}/>\n                \n                <ReactCrop \n                    src={pathTempFoto} \n                    crop={crop} \n                    \n                    // onImageLoaded={image => setFoto(image)}\n                    onChange={(newCrop,percentCrop) => {\n                        console.log(percentCrop)\n                        setCrop(percentCrop)\n                    }}\n                />\n                {pathTempFoto?<small>Clickear y arrastrar en la foto para redimensionar</small>:null}\n            </Modal.Body>\n            <Modal.Footer>\n            <Button variant=\"secondary\" onClick={()=>setShow(false)}>\n                Cerrar\n            </Button>\n            <Button onClick={()=>sendResizeImage(originalName)} type=\"button\" variant='success'>Subir</Button>\n\n            </Modal.Footer>\n        </Modal>\n        </>\n    );\n}\n\nfunction ModalFotoPortada(props) {\n    const [show, setShow] = useState(false);\n    const [crop, setCrop] = useState({ aspect: 16 / 4 });  \n    const [pathTempFoto,setPathTempFoto] = useState(\"\");\n    const [originalName, setOriginalNAme] = useState(\"\");\n    const subirImagen = (imagen)=>{ \n        let formData = new FormData();\n        let headers = new Headers();\n        headers.append(\"Authorization\", localStorage.session)\n        formData.append(\"temp\", imagen); \n\n        fetch(config.url+\"/api/acount/portadaphoto/\"+props.idUser,{\n            method:\"post\",\n            headers,\n            body: formData\n        })\n        .then(result => result.json())\n        .then(result =>{\n            console.log(result.originalName)\n            setOriginalNAme(result.originalName)\n            setPathTempFoto(config.url+result.path)\n        })\n    }\n    const sendResizeImage = (name)=>{\n        fetch(config.url+\"/api/acount/resizephotoportada/\"+props.idUser,{\n            method:\"post\",\n            headers:{\n                Authorization:localStorage.session,\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                crop,\n                originalName:name\n            })\n        })\n        .then(result => {\n            if(result.status == 200)\n            {\n                window.location.reload()\n            }\n        }) \n    }\n\n    return (\n        <>\n        <Button onClick={() => setShow(true)} className=\"mr-3 rounded-0\" variant='outline-primary' size='sm'>Cambiar foto de portada</Button>\n\n        <Modal show={show} onHide={()=>setShow(false)}>\n            <Modal.Header closeButton>\n                <Modal.Title>imagen</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <input type=\"file\" onChange={e=>{ \n                    subirImagen(e.target.files[0])\n                }}/>\n                <ReactCrop \n                    src={pathTempFoto} \n                    crop={crop}  \n                    onChange={(newCrop,percentCrop) => {\n                        console.log(percentCrop)\n                        setCrop(percentCrop)\n                    }}\n                />\n                {pathTempFoto?<small>Clickear y arrastrar en la foto para redimensionar</small>:null}\n            </Modal.Body>\n            <Modal.Footer>\n            <Button variant=\"secondary\" onClick={()=>setShow(false)}>\n                Cerrar\n            </Button>\n            <Button onClick={()=>sendResizeImage(originalName)} type=\"button\" variant='success'>Subir</Button>\n            </Modal.Footer>\n        </Modal>\n        </>\n    );\n}\n\nfunction FormCambioContrasenia(props) {\n    const [show, setShow] = useState(false);\n  \n    const handleClose = () => setShow(false); \n    const [pass, setPass] = useState(\"\");\n    const [rptPass, setRptPass] = useState(\"\");\n    const [border, setBorder] = useState({b:\"\",m:\"\"});\n\n    const guardar = e=>{\n        if(!pass || !rptPass || pass.length <6 || rptPass.length < 6 || pass != rptPass)\n        { \n            return setBorder({b:\"border-danger\",m:\"Las contraseñas deben contener un mínimo de 6 caracteres, y deben coincidir\"})\n        }\n        \n        fetch(config.url+\"/api/acount/cambiarclave/\"+props.userId,{\n            method:\"post\",\n            headers:{\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                Authorization:localStorage.session\n            },\n            body:JSON.stringify({\n                pass\n            })\n        })\n        .then(data => {\n            if(data.status == 200)\n            {\n                handleClose()\n            }\n        })\n    }\n\n    return (\n      <> \n        <Button onClick={() => setShow(true)} className=\"mr-3 rounded-0\" variant='outline-primary' size='sm'>Cambiar contraseña</Button>\n  \n        <Form onSubmit={guardar}>\n            <Modal show={show} onHide={handleClose}>\n                    <Modal.Body>\n                        <Form.Group>\n                            <label>Nueva Contraseña</label>\n                            <Form.Control type='password' className={border.b} required onChange={e => setPass(e.target.value)} value={pass}/>\n                        </Form.Group>\n                        <Form.Group>\n                            <label>Repetir Contraseña</label>\n                            <Form.Control type='password' className={border.b} required onChange={e => setRptPass(e.target.value)} value={rptPass}/>\n                        </Form.Group>\n                        {border.b ? <label className='text-danger'>{border.m}</label> : null}\n                    </Modal.Body>\n            <Modal.Footer>\n                <Button className='rounded-0' variant=\"secondary\" onClick={handleClose}>\n                    Cerrar\n                </Button>\n                <Button className='rounded-0' variant=\"primary\" onClick={guardar}>\n                    Guardar\n                </Button>\n            </Modal.Footer>\n            </Modal>\n        </Form>\n      </>\n    );\n  } ","import React from 'react';\nimport { Container, Row, Col, Navbar, Card, Form, FormGroup, Button } from 'react-bootstrap';\n\nconst Home = ()=>{\n    return(\n        <React.Fragment>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-2\">\n                <Navbar.Brand href=\"#home\">O</Navbar.Brand>                \n            </Navbar> \n            <Container>\n                <Row className=\"pt-3\">\n                    <Col md=\"9\">\n                        <Row className=\"pb-3\">\n                            <Col md=\"12\">\n                                <Card style={{borderTop:\"solid 3px #2461b2\"}} className=\"rounded-0\">\n                                    <Card.Body>\n                                        <h5>Usuarios destacados</h5>\n                                        <Card>\n                                            ffff\n                                        </Card>\n                                    </Card.Body>\n                                </Card>\n                            </Col>                         \n                        </Row>\n                        <Row className=\"pb-3\">\n                            <Col>\n                                <Card className=\"rounded-0\">\n                                    <Card.Body>\n                                        <Form>\n                                            <FormGroup>\n                                                <label>Buscá lo que necesites, encontrá los proveedores</label>\n                                                <input className=\"form form-control rounded-0\" placeholder='herrería, obra, metal' />\n                                                <small className=\"text-muted\">Ingresa las palabras claves separadas por comas ,</small>\n                                            </FormGroup>\n                                        </Form>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col md=\"3\">                     \n                        <Row>\n                            <Col>\n                                <Card style={{borderTop:\"solid 3px #2461b2\"}} className=\"rounded-0\">\n                                    <Card.Header>\n                                        <h5> Buscás trabajo?</h5>\n                                    </Card.Header>\n                                    <Card.Body>\n                                        <a href='/#cargarcv' className=\"btn btn-danger rounded-0\">Publicá tu CV acá!</a><br></br>\n                                        <small>Se lo haremos llegar directamente a las empresas que forman parte de nuestro equipo</small>\n                                    </Card.Body>\n                                </Card> \n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport {Container, Row, Form, Col, Card, Navbar, Button, Modal} from 'react-bootstrap'; \nimport config from '../../config';\n\nconst Login = (props)=>{\n    const [userName,setUserName] = useState(\"\");\n    const [pass,setPass] = useState(\"\");\n    const [alert,setAlert] = useState(\"\");\n\n    const sendForm = e=>{\n        e.preventDefault();\n        fetch(config.url+\"/api/acount/login\",{\n            method:\"post\",\n            headers:{\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body:JSON.stringify({\n                userName,\n                pass\n            })\n        })\n        .then(data => {\n            if(data.status == 403)\n            {\n                setAlert(<h6 className=\"text-danger\">Datos incorrectos</h6>)\n            }\n            else if(data.status == 200)\n            {\n                data.json()\n                .then(data => {\n                    localStorage.session =  `Bearer ${data.token}`;\n                    //props.setUser({id:data.id,razonSocial:data.razonSocial})\n                    window.location = \"/\"\n                })\n            }\n        })\n        .catch(err => console.log(err))\n    }\n\n    return(\n        <div>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-2\">\n                <Navbar.Brand href=\"#home\">O</Navbar.Brand>                \n            </Navbar> \n            <Container>\n                <Row className=\"d-flex justify-content-center mt-5\">\n                    <Col md=\"6\">\n                        <Card className=\"rounded-0\">\n                            <Card.Body >\n                                <Card.Title>\n                                    Ingresar\n                                </Card.Title>\n                                {alert}\n                                <form onSubmit={sendForm}>\n                                    <Form.Group>\n                                        <small>Nombre de usuario</small>\n                                        <input onChange={e=>setUserName(e.target.value)} value={userName}\n                                            required type=\"text\" className=\"form form-control rounded-0\"/>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <small>Contraseña</small>\n                                        <input onChange={e=>setPass(e.target.value)} value={pass}\n                                            required type='password' className=\"form form-control rounded-0\"/>\n                                    </Form.Group>\n                                    <Row>\n                                        <Col>\n                                            <Button type=\"submit\" className=\"rounded-0\">Enviar</Button>\n                                        </Col>\n                                        <Col>\n                                            <RecuperarCuenta/>\n                                        </Col>\n                                        <Col>\n                                            <Button href='/#registro' variant='link' size='sm'>registrarse</Button>\n                                        </Col>\n                                    </Row>\n                                </form>\n                                \n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nconst RecuperarCuenta = ()=>{\n    const [show, setShow] = useState(false);\n    const [userName, setUserName] = useState(\"\");\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [enviado, setEnviado] = useState(false);\n\n    const solicitarRecupero = e=>{\n        e.preventDefault();\n        fetch(config.url+\"/api/acount/solicitarrecupero?userName=\"+userName,{\n            method:\"post\"\n        })\n        .then(data =>{\n            if(data.status == 200)\n            {\n                setEnviado(true)\n                return data.json()\n            }\n        }).then(data => setUserName(data.email))\n    }\n\n    return(\n        <React.Fragment>\n            <Button variant='link' onClick={handleShow} size='sm'>recuperar cuenta</Button>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Body>\n                    {\n                        !enviado ? <React.Fragment>\n                        <Modal.Title>Ingresar nombre de usuario</Modal.Title>\n                            <Form.Control  onChange={e=> setUserName(e.target.value)}/>\n                            <small>Te enviaremos un email para el recupero de contraseña a la dirección asociada con este usuario</small>\n                        </React.Fragment>\n                        :\n                        <Modal.Title>\n                            Hemos enviado un email a una dirección similar a {userName}\n                        </Modal.Title>\n                    }\n                </Modal.Body>\n                <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Cerrar\n                </Button>\n                <Button variant=\"primary\" onClick={solicitarRecupero}>\n                    Enviar\n                </Button>\n                </Modal.Footer>\n            </Modal>\n        </React.Fragment>\n    )\n}\n\nexport default Login;","import React, { useState } from 'react';\nimport {Container, Row, Form, Col, Card, Navbar, Button} from 'react-bootstrap'; \nimport config from '../../config';\n\nconst Registro = ()=>{\n    const [razonSocial,setRazonSocial] = React.useState(\"\")\n    const [userName,setUserName] = React.useState(\"\")\n    const [email, setEmail] = React.useState(\"\")\n    const [pass,setPass] = React.useState(\"\")\n    const [rPass,setrPass] = React.useState(\"\")\n    const [rPassBorder,setrPassBorder] = React.useState({})\n    const [rSocialBorder,setrSocialBorder] = React.useState({l:\"\", b:\"\"})\n    const [registrado, setRegistrado] = useState(false)\n    \n    const submitForm = e => {\n        e.preventDefault();\n        if(pass != rPass || pass.length < 6)\n        {\n            setrPassBorder({l:\"Las contraseñas deben coincidir y tener un mínimo de 6 caracteres\", c:\"danger\"})\n        }\n        else{\n            setrSocialBorder({l:\"\", b:\"\"})\n            fetch(config.url+\"/api/acount/registro\",{\n                method:\"post\",\n                headers:{\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body:JSON.stringify({\n                    userName,\n                    razonSocial,\n                    email,\n                    pass,\n                })\n            })\n            .then(data => {\n                if(data.status == 402)\n                {\n                    setrSocialBorder({l:\"El nombre de usuario se encuentra en uso\", b:\"border border-danger\"})\n                }else\n                if(data.status == 200)\n                {\n                    //alert(\"Tu cuenta se ha creado exitosamente, solo resta activarla revisando tu email\")\n                    setRegistrado(true);\n                    //window.location = \"/#login\"\n                }\n            })\n            .catch(err => console.log(err))\n        }\n    }\n\n    return(\n        <div>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-2\">\n                <Navbar.Brand href=\"#home\">O</Navbar.Brand>                \n            </Navbar> \n            <Container>\n                <Row className=\"d-flex justify-content-center mt-3\">\n                    <Col md=\"6\">\n                        <Card className=\"rounded-0\">\n                            {!registrado ? \n                            <Card.Body >\n                                <Card.Title>\n                                    Registrar nueva cuenta\n                                </Card.Title>\n                                <form onSubmit={submitForm}>\n                                    <Form.Group>\n                                        <label htmlFor=\"rsocial\">* Nombre de Usuario</label>\n                                        <input minLength={4} maxLength={130} required value={userName} onChange={e => setUserName(e.target.value)}\n                                            id=\"rsocial\" type=\"text\" className={\"form form-control rounded-0 \"} required/>\n                                        <small className=\"text-muted\">Será necesario para acceder a tu cuenta</small>\n                                        <small className=\"text-muted\">{rSocialBorder.l}</small>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <label htmlFor=\"rsocial\">* Razón social</label>\n                                        <input required value={razonSocial} onChange={e => setRazonSocial(e.target.value)}\n                                            id=\"rsocial\" type=\"text\" className={\"form form-control rounded-0 \"} placeholder=\"Persona S.R.L\" required/>\n                                        <small className=\"text-muted\">Como querés que vean tu negocio</small>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <label htmlFor=\"email\">* Email</label>\n                                        <input value={email} onChange={e => setEmail(e.target.value)}\n                                            required type=\"email\" id=\"email\" className={\"form form-control rounded-0 \"+rSocialBorder.b}\n                                            placeholder=\"info@ejemplo.com\"/>\n                                        <small className='text-muted'>La necesitaremos para validar la cuenta</small>\n                                        \n                                    </Form.Group> \n                                    <Form.Group>\n                                        <label htmlFor=\"pass\">Contraseña</label>\n                                        <input min={6} value={pass} onChange={e => setPass(e.target.value)}\n                                            onKeyUp={\n                                                ()=> {pass == rPass? setrPassBorder(\"success\") : setrPassBorder(\"danger\")}\n                                            }\n                                            required type='password' id=\"pass\" className=\"form form-control rounded-0\"/>\n                                    </Form.Group>\n                                    <Form.Group onKeyUp={\n                                        ()=> {pass == rPass? setrPassBorder({l:\"\", c:\"success\"}) : setrPassBorder({l:\"Las contraseñas deben coincidir y tener un mínimo de 6 caracteres\", c:\"danger\"})}\n                                    }>\n                                        <label htmlFor=\"rpass\">Repetir Contraseña</label>\n                                        <input min={6} value={rPass} onChange={e => setrPass(e.target.value)}\n                                             required type='password' id=\"rpass\" className={`form form-control rounded-0 border border-${rPassBorder.c}`}/>\n                                        <small className=\"text-danger\">{rPassBorder.l}</small>\n                                    </Form.Group>\n                                    <Row>\n                                        <Col>\n                                            <Button type=\"submit\" className=\"rounded-0\">Enviar</Button>\n                                        </Col> \n                                    </Row>\n                                </form>                                \n                            </Card.Body>\n                            :\n                            <Card.Body>\n                                <Card.Subtitle>\n                                    ¡Hemos creado tu cuenta correctamente!\n                                </Card.Subtitle>\n                                <hr></hr>\n                                <Card.Title>\n                                    Acabamos de enviar un email a:\n                                </Card.Title> \n                                <h2>{email}</h2>\n                                <hr></hr>\n                                <small>Por favor revisá tu cuenta de correo electrónico para validar.\n                                    En caso de ser incorrecta la dirección ingresada, deberá recargar los datos para su registro en VALOR-AR\n                                </small>\n                            </Card.Body>\n                            }\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Registro;","import React, { useState } from 'react';\nimport { Container, Row, Col, Card, Navbar, Button, Form, Badge, Modal } from 'react-bootstrap';\nimport config from '../../config'\nconst CargaCv = () => {\n    const [nombre, setNombre] = useState(\"\");\n    const [telefono, setTelefono] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [tags, setTags] = useState(\"\");\n    const [archivo, setArchivo] = useState(null) \n    const [claveSeguridad, setClaveSeguridad] = useState(\"\") \n    const [classBorder, setClassBorder] = useState(\"\") \n\n    const enviar = e=>{\n        e.preventDefault();\n        let headers = new Headers();\n        let fd = new FormData()\n        headers.append('Accept', 'application/json')\n        headers.append('Content-Type', 'application/json')\n        fd.append(\"cv\", archivo);\n        fd.append(\"user\", JSON.stringify({\n            nombre,\n            telefono,\n            email,\n            tags\n        }))\n\n        fetch(config.url+'/api/curriculum?key='+claveSeguridad,{\n            method:\"POST\",\n            //headers,\n            body:fd\n        })\n        .then(data => {\n            if(data.status == 201)\n            {\n                alert(\"Correcto: Te hemos enviado un email\")\n                window.location = \"/#\"\n            }\n            else if(data.status == 403)\n            {\n                setClassBorder(\"border-danger\")\n            }\n        })\n    }\n\n    return(\n        <React.Fragment>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-2\">\n                <Navbar.Brand href=\"#home\">O</Navbar.Brand>                \n            </Navbar>\n            <Container>\n                <Row className=\"d-flex justify-content-center mt-4\">\n                    <Col md='8'>\n                        <Card>\n                            <Card.Body>\n                                <Card.Title>Adjuntanos tu Currículum</Card.Title> \n                                {classBorder ? <h6 className='text-danger'>El email está registrado y no se ingresó una clave de seguridad válida</h6>:null}        \n                                <Form onSubmit={enviar}>\n                                    <Form.Group>\n                                        <label htmlFor='Nombre'>Nombre completo *</label>\n                                        <Form.Control required autoComplete='off' value={nombre} onChange={e=>setNombre(e.target.value)} id='Nombre' size='sm' className='rounded-0' type='text' />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <label htmlFor='Telefono'>Teléfono *</label>\n                                        <Form.Control required autoComplete='off' value={telefono} onChange={e=>setTelefono(e.target.value)} id='Telefono' size='sm' className='rounded-0' type='tel' />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <label htmlFor='Email'>Email *</label>\n                                        <Form.Control required autoComplete='off' value={email} onChange={e=>setEmail(e.target.value)} id='Email' size='sm' className={'rounded-0 '+classBorder} type='email' />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <label htmlFor='Tags'>Palabras claves sobre tu orientación vocacional, separado por comas, *</label>\n                                        <Form.Control required autoComplete='off' value={tags} onChange={e=>setTags(e.target.value)} autoComplete='off' id='Tags' size='sm' className='rounded-0' type='text' />\n                                        <label>{tags.split(\",\").map(t => <Badge key={t+\"_\"} className='mr-1' variant='info'>{t.trim()}</Badge>)}</label>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Row>\n                                            <Col md=\"6\">\n                                                <label htmlFor='Archivo'>Cargar archivo: PDF, o tipo Word</label>\n                                                <Form.Control onChange={e=>setArchivo(e.target.files[0])} required id='Archivo' size='sm' className='rounded-0' type='file' accept='.pdf, .doc, .docx, .odt, .doc' />\n                                            </Col>\n                                            <Col md=\"6\">\n                                                <label htmlFor='clave'>Clave de Seguridad (opcional)</label>\n                                                <Form.Control onChange={e=>setClaveSeguridad(e.target.value)} value={claveSeguridad} id='clave' size='sm' className={'rounded-0 '+classBorder} />\n                                                <small>(solo en caso de querer editar la información)</small>\n                                            </Col>\n                                        </Row>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Button type=\"submit\" variant='primary' className=\"rounded-0\">Enviar</Button>\n                                        <RecuperoClave></RecuperoClave>\n                                    </Form.Group>\n                                </Form>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nconst RecuperoClave = ()=> {\n    const [show, setShow] = useState(false);\n    const [email, setEmail] = useState(\"\");\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const enviar = ()=>{\n        fetch(config.url+\"/api/curriculum/recuperoclave?email=\"+email,{\n            method:\"post\"\n        })\n        .then(res=>{\n            if(res.status == 200)\n            {\n                alert(\"Te enviamos un email con la nueva clave\");\n                handleClose();\n            }\n        })\n    }\n    \n  \n    return (\n      <> \n        <Button type=\"submit\" onClick={handleShow} variant='secondary' className=\"rounded-0 ml-2\">Generar una nueva clave</Button>\n  \n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Recuperar clave</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n              <label>Ingresar Email</label>\n              <Form.Control className='rounded-0' value={email} onChange={e => setEmail(e.target.value)}></Form.Control></Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" className='rounded-0 ml-1' onClick={handleClose}>\n              Cerrar\n            </Button>\n            <Button variant=\"primary\" className='rounded-0' onClick={enviar}>\n              Enviar\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n\nexport default CargaCv;","import React from 'react';\nimport { Row, Container, Card, Col, Navbar } from 'react-bootstrap';\n\nconst MailConfirmado = ()=>{\n    return(\n        <React.Fragment>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-2\">\n                <Navbar.Brand href=\"#home\">O</Navbar.Brand>                \n            </Navbar>\n            <Container className='mt-5'>\n                <Row>\n                    <Col>\n                        <Card className='rounded-0'>\n                            <Card.Body>\n                                <Card.Title>\n                                    Hemos validado tu email correctamente.\n                                </Card.Title>\n                                <Card.Text>\n                                    Tu cuenta ya se encuentra activada para ingresar.\n                                </Card.Text>\n                                <a className='btn btn-primary rounded-0' href='/#login'>\n                                    Ir al login\n                                </a>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default MailConfirmado;","import React, { useEffect, useState } from 'react';\nimport {Container, Row, Card, Table, Col, Navbar, Form} from 'react-bootstrap';\nimport DataTable from 'react-data-table-component';\n\nconst columnas = [\n    {\n        name:\"Nombre Completo\",\n        selector: \"nombre\"\n    },\n    {\n        name:\"Teléfono\",\n        selector: \"telefono\"\n    },\n    {\n        name:\"Email\",\n        selector: \"email\"\n    },\n    {\n        name:\"Palabras clave\",\n        selector: \"tags\"\n    },\n    {\n        name:\"Fecha Alta\",\n        selector: \"fechaAlta\"\n    },\n    {\n        name:\"Archivo Cv\",\n        selector: \"archivo\"\n    }    \n]\n\nconst getData = ()=>{\n    return [{\n        nombre:\"gian\",\n        telefono:\"123123123\", \n        email:\"gian@gmail.com\",\n        tags:\"perro\",\n        fechaAlta:\"01/01/10\",\n        archivo:<a href='/#'>Ver CV</a>,\n    }]\n}\n\nconst VerCvs = ()=>{\n    const [data,setData] = useState([])\n    useEffect(()=>{\n        setData(getData())\n    },[])\n    return(\n        <React.Fragment>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-2\">\n                <Navbar.Brand href=\"#home\">O</Navbar.Brand>                \n            </Navbar> \n            <Container>\n                <Row className=\"mt-3\">\n                    <Col>\n                        <Card>\n                            <Card.Body>\n                                <Card.Title>Currículums ingresados</Card.Title>\n                                <hr></hr>\n                                <label htmlFor='search'>Ingresar palabras clave para la búsqueda</label>\n                                <Form.Control id='search' type='search'/>\n                                <DataTable \n                                    columns={columnas}\n                                    theme='solarized'\n                                    data={data}\n                                    pagination={true}\n                                />\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default VerCvs;","import React, { useState } from 'react';\nimport { Container, Navbar, Card, Form, Button, Col, Row } from 'react-bootstrap';\nimport config from '../../config';\n\nconst CambiarPassRecupero = props =>{\n    const [newPass, setNewPass] = useState(\"\");\n    const [rptNewPass, setRptNewPass] = useState(\"\");\n    const [borde,setBorde] = useState(\"\");\n\n\n    const sendPass = e=>{\n        e.preventDefault();\n        if(newPass == rptNewPass)\n        //fetch(config.url+`/api/acount/cambiarclaverecupero?id=1&clave=asd54`,{\n            fetch(config.url+`/api/acount/cambiarclaverecupero?id=${props.userId}&clave=${props.clave}`,{\n            headers:{\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            method:\"post\",\n            body: JSON.stringify({newPass})\n        })\n        .then(data => {\n            if(data.status == 200)\n            {\n                window.location = \"/#login\"\n            }\n        })\n        else \n            setBorde(\"border-danger\")\n    }\n\n    return(\n        <React.Fragment>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-2\">\n                <Navbar.Brand href=\"#home\">O</Navbar.Brand>                \n            </Navbar>\n            <Container>\n                <Row className='d-flex justify-content-center mt-5'>\n                    <Col md='6'>\n                        <Card className='rounded-0'>\n                            <Card.Body>\n                                <Card.Title className='text-success'>\n                                    <b>Crear una nueva contraseña</b>\n                                </Card.Title>\n                                <Form onSubmit={sendPass}>\n                                    <Form.Group>\n                                        <label htmlFor='newPass'>Contraseña</label>\n                                        <Form.Control minLength='6' className='rounded-0' onChange={e=>{\n                                            setNewPass(e.target.value)\n                                            setBorde(\"\")\n                                        }} value={newPass} type='password' />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <label htmlFor='newPass'>Repetir Contraseña</label>\n                                        <Form.Control minLength='6' className={'rounded-0 '+borde} onChange={e=>setRptNewPass(e.target.value)} value={rptNewPass} type='password' />\n                                        {borde ? <small className='text-danger'>Las contraseñas deben coincidir</small>:null}\n                                    </Form.Group>\n                                    <Button type='submit' className='rounded-0'>Enviar</Button>\n                                </Form>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default CambiarPassRecupero;","import React, { useState, useEffect, forceUpdate } from 'react'; \nimport {Button, Navbar, Nav, NavDropdown, Form, FormControl, Container, Row, Col} from 'react-bootstrap';\nimport Perfil from './controllers/acount/perfil';\nimport Home from './controllers/home';\nimport './generalStyle.css'\nimport {FaHandsHelping, FaRegBuilding, FaRegAddressCard, FaRegQuestionCircle, FaUserTie} from 'react-icons/fa';\nimport {IoMdNotificationsOutline, IoIosLogOut} from 'react-icons/io'\nimport logoSitio from './logos/Marca-03.png'\nimport config from './config';\nimport Login from './controllers/acount/login';\nimport Registro from './controllers/acount/registro'; \nimport CargaCv from './controllers/curriculum/cargarCv';\nimport MailConfirmado from './controllers/acount/mailConfirmado';\nimport VerCvs from './controllers/curriculum/verCvs';\nimport CambiarPassRecupero from './controllers/acount/cambiarPassRecupero';\n\nfunction useForceUpdate(){\n    const [value, setValue] = useState(0); // integer state\n    return () => setValue(value => ++value); // update the state to force render\n}\n\nexport default ()=>{\n    const [ruta,setRuta] = useState(window.location.hash.slice(1));\n    const [user, setUser] = useState({id:\"\",razonSocial:\"\",rol:\"\"});\n    const [body, setBody] = useState(<div></div>)\n    useEffect(()=>{ \n        fetch(config.url+'/api/acount',{ \n            headers:{\n                \"raw\":\"json\",\n                Authorization:localStorage.session\n            }\n        })\n        .then(data => {\n            data.json()\n            .then(d =>  setUser({id:d.id,razonSocial:d.nombre, rol:d.rol})) \n        })\n        let retBody= ()=>{ \n\n            let ruta = window.location.hash.slice(1);\n            let rutaSliced = ruta.split(\"/\");\n            \n            console.log(\"ruta\", rutaSliced)\n            if(!window.location.hash)\n            {\n                setBody(<Home></Home>)\n            }\n            else if(rutaSliced[0] == \"login\")\n            {\n                setBody(<Login/>)\n            }\n            else if(rutaSliced[0] == \"rescuepass\")\n            {\n                setBody(<CambiarPassRecupero userId={rutaSliced[1]} clave={rutaSliced[2]}/>)\n            }\n            else if(rutaSliced[0] == \"registro\")\n            {\n                setBody(<Registro/>)\n            }\n            else if(rutaSliced[0] == \"validado\")\n            {\n                setBody(<MailConfirmado/>)\n            }\n            else if(rutaSliced[0] == \"cargarcv\")\n            {\n                setBody(<CargaCv/>)\n            }\n            else if(rutaSliced[0] == \"vercvs\")\n            {\n                setBody(<VerCvs/>)\n            }\n            else if(rutaSliced[0] == \"profile\" && !isNaN(rutaSliced[1]))\n            {\n                setBody(<Perfil/>)\n            } \n        }\n        window.addEventListener(\"hashchange\", retBody)\n        window.addEventListener(\"load\", retBody)\n    },[]) \n\n    return(\n    <React.Fragment> \n            <Navbar bg='light' expand=\"lg\" variant=\"light\" className=\"fixed-top\">\n                <Navbar.Brand href=\"#\"><img width='120' src={logoSitio}/></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto ml-auto\">\n                        <Nav.Link href=\"#empresas\"><FaRegBuilding/> Empresas</Nav.Link>\n                        <Nav.Link href=\"#autonomos\"><FaHandsHelping/> Autónomos</Nav.Link>\n                        {user.rol > 0 ? <Nav.Link href=\"#cv\"><FaRegAddressCard/> CV Postulantes</Nav.Link> : null}\n                        <Nav.Link href=\"#info\"><FaRegQuestionCircle/> Quienes somos</Nav.Link>\n                    </Nav>\n                    <Nav className=\"mr-0\"> \n                    <Nav.Link href=\"#link\"><IoMdNotificationsOutline/></Nav.Link>\n                        <NavDropdown title={\n                            user.id ? user.razonSocial : \"Cuenta\"\n                        } id=\"basic-nav-dropdown\" alignRight>\n                            {user.id ?                                    \n                                (<React.Fragment>\n                                    <NavDropdown.Item  onClick={()=>{\n                                        window.location = \"#profile/\"+user.id\n                                        window.location.reload()\n                                    }}><FaUserTie/> Mi perfil </NavDropdown.Item>\n                                    <NavDropdown.Item onClick={()=>{\n                                        localStorage.session = \"\"\n                                        window.location.reload()\n                                    }}><IoIosLogOut/> Logout </NavDropdown.Item>\n                                </React.Fragment>)\n                                :                               \n                                \n                                (<React.Fragment>\n                                    <NavDropdown.Item href=\"#login\">  Ingresar </NavDropdown.Item>\n                                    <NavDropdown.Item href=\"#registro\">  Registrarse </NavDropdown.Item>\n                                </React.Fragment>)\n                                \n                            }\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>        \n            {body} \n    </React.Fragment>\n    )\n} \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}