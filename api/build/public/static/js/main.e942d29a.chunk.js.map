{"version":3,"sources":["logos/Marca-03.png","config.js","controllers/perfil.js","controllers/home.js","controllers/login.js","controllers/registro.js","controllers/cargarCv.js","controllers/mailConfirmado.js","app.js","serviceWorker.js","index.js"],"names":["module","exports","config","url","Perfil","props","useState","editar","toggleEditar","id","razonSocial","rol","user","setUser","descripcion","setDescripcion","setRazonSocial","estrellas","setEstrellas","seguidores","setSeguidores","reputacion","setReputacion","visitas","setVisitas","telefono","setTelefono","email","setEmail","tags","setTags","titulo","setTitulo","slogan","setSlogan","sitioWeb","setSitioWeb","useEffect","window","location","hash","slice","split","fetch","headers","Authorization","localStorage","session","then","data","json","d","Fragment","Navbar","bg","expand","variant","className","Brand","href","Container","Row","Col","style","maxHeight","width","src","imagenPortada","canEdit","Button","onClick","confirm","method","body","JSON","stringify","status","console","log","size","ModalFotoPerfil","idUser","ModalFotoPortada","md","Card","borderTop","Body","textAlign","imagenPerfil","Form","Group","value","onChange","e","target","estrellasHtml","i","map","t","Badge","key","Title","c","dangerouslySetInnerHTML","__html","show","setShow","aspect","crop","setCrop","pathTempFoto","setPathTempFoto","originalName","setOriginalNAme","Modal","onHide","Header","closeButton","type","imagen","formData","FormData","Headers","append","result","path","subirImagen","files","newCrop","percentCrop","Footer","name","reload","Home","FormGroup","placeholder","Login","userName","setUserName","pass","setPass","alert","setAlert","onSubmit","preventDefault","token","catch","err","required","Registro","React","rPass","setrPass","rPassBorder","setrPassBorder","l","b","rSocialBorder","setrSocialBorder","length","htmlFor","min","onKeyUp","RecuperoClave","handleClose","Control","res","CargaCv","nombre","setNombre","archivo","setArchivo","claveSeguridad","setClaveSeguridad","classBorder","setClassBorder","fd","autoComplete","trim","accept","MailConfirmado","Text","setBody","retBody","rutaSliced","isNaN","addEventListener","logoSitio","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","alignRight","Item","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e942d29a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Marca-03.c85b2189.png\";","let config = {};\n\nconfig = process.env.NODE_ENV === \"production\" ?\n    {\n        url:\"\"\n    }\n    :\n    {\n        url:\"http://localhost:5000\"\n    }\n\nexport default config;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Col, Row, Card, Button, Image, Form, ButtonGroup, Badge, Modal, Navbar } from 'react-bootstrap';\nimport Jodit from 'jodit-react';\nimport ReactCrop from 'react-image-crop';\nimport 'react-image-crop/dist/ReactCrop.css';\n\nimport config from '../config'; \n\nconst Perfil = (props)=>{\n    const [editar, toggleEditar] = useState(false)\n    const [user, setUser] = useState({id:\"\",razonSocial:\"\",rol:\"\"});\n    const [descripcion,setDescripcion] = useState(\"\");\n    const [razonSocial, setRazonSocial] = useState(\"\");\n    const [estrellas, setEstrellas] = useState(0);\n    const [seguidores, setSeguidores] = useState(0);\n    const [reputacion, setReputacion] = useState(0);\n    const [visitas, setVisitas] = useState(0);\n    const [telefono, setTelefono] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [tags, setTags] = useState(\"\"); \n    const [titulo, setTitulo] = useState(\"\"); \n    const [slogan, setSlogan] = useState(\"\"); \n    const [sitioWeb, setSitioWeb] = useState(\"\"); \n\n\n    useEffect(()=>{ \n        let id = window.location.hash.slice(1).split(\"/\")[1]\n        if(!user.id)\n        fetch(config.url+'/api/acount/profile/'+id,{ \n            headers:{ \n                Authorization:localStorage.session\n            }\n        })\n        .then(data => {\n            data.json()\n            .then(d =>  {\n                setUser(d)\n                setDescripcion(d.descripcion ? d.descripcion : \"\")\n                setRazonSocial(d.razonSocial)\n                setEstrellas(d.estrellas)\n                setSeguidores(d.seguidores)\n                setReputacion(d.reputacion)\n                setVisitas(d.visitas)\n                setTelefono(d.telefono)\n                setEmail(d.email)\n                setTags(d.tags ? d.tags : \"\")\n                setTitulo(d.titulo ? d.titulo : \"\")\n                setSlogan(d.slogan ? d.slogan : \"\")\n                setSitioWeb(d.sitioWeb ? d.sitioWeb : \"\")\n            }) \n        })  \n    })\n\n    const guardar = ()=>{\n        if(window.confirm(\"¿Seguro que desea aplicar los cambios?\"))\n        fetch(config.url+\"/api/acount/profile/\"+user.id,{\n            method:\"put\",\n            headers:{\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                Authorization:localStorage.session\n            },\n            body:JSON.stringify({\n                razonSocial,\n                slogan,\n                titulo,\n                telefono,\n                email,\n                sitioWeb,\n                descripcion\n            })\n        })\n        .then(data => {\n            if(data.status == 200){\n                toggleEditar(false) \n            }\n            else\n                console.log(data)\n        })\n    }\n    \n    return(\n        <React.Fragment>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-2\">\n                <Navbar.Brand href=\"#home\">O</Navbar.Brand>                \n            </Navbar> \n            <Container>\n                <Row>\n                    <Col className=\"d-flex justify-content-center\">\n                        <img style={{maxHeight:300}} width=\"100%\" src={config.url+user.imagenPortada}></img>\n                    </Col>\n                </Row>\n                {user.canEdit ? <Row className='py-3'>\n                    <Col>\n                        {!editar? (\n                            <React.Fragment>\n                                <Button onClick={()=>toggleEditar(true)}\n                                    className=\"mr-3 rounded-0\" variant='outline-primary' size='sm'>Editar Información</Button>\n                                {/* <Button className=\"mr-3 rounded-0\" variant='outline-primary' size='sm'>Cambiar foto de portada</Button> */}\n                                <ModalFotoPerfil idUser={user.id}></ModalFotoPerfil>\n                                <ModalFotoPortada idUser={user.id}></ModalFotoPortada>\n                            </React.Fragment>\n                            )\n                            : <Button onClick={guardar}\n                            className=\"mr-3 rounded-0\" variant='outline-warning' size='sm'>Guardar</Button>\n                        }\n                    </Col>\n                </Row> : <div className=\"pb-4\"></div>}\n                <Row>\n                    <Col md=\"5\">\n                        <Card className='rounded-0' style={{borderTop:\"solid 3px #184ca1\"}}> \n                            <Card.Body style={{textAlign:\"center\"}}>\n                                <img\n                                    width=\"33%\" \n                                    src={config.url+user.imagenPerfil} />\n                                {\n                                    !editar ? \n                                    <h5>{razonSocial}</h5> : \n                                    <Form.Group>\n                                        <label>Razón Social</label>\n                                        <input className=\"form-control-sm form-control\" value={razonSocial} onChange={e => setRazonSocial(e.target.value)}/>\n                                    </Form.Group>\n                                }\n                                {(()=>{\n                                    let estrellasHtml = \"\";\n                                    for(let i = 0; i<estrellas; i++)\n                                    {\n                                        estrellasHtml+=\"⭐\";\n                                    }\n                                    return <div>{estrellasHtml}</div>\n                                })()}\n                                <hr/>\n                                <Row>\n                                    <Col>\n                                        <h3>{seguidores}</h3>Seguidores\n                                    </Col>\n                                    <Col>\n                                        <h3>{reputacion}</h3>Reputación\n                                    </Col><Col>\n                                        <h3>{visitas}</h3>Visitas\n                                    </Col> \n                                </Row> \n                                <hr></hr>\n                                <Row className=\"pb-2\">\n                                    <Col>\n                                        {!editar ? \"📞\"+ telefono : \n                                        <Form.Group>\n                                            <label>Teléfono de contacto</label>\n                                            <input className=\"form-control-sm form-control\" value={telefono} onChange={e => setTelefono(e.target.value)}/>\n                                        </Form.Group>}\n                                    </Col>  \n                                </Row>\n                                <Row>\n                                    <Col>\n                                    {!editar ? email : \n                                    <Form.Group>\n                                    <label>Email</label>\n                                    <input className=\"form-control-sm form-control\" value={email} onChange={e => setEmail(e.target.value)}/>\n                                    </Form.Group>}\n                                    </Col>  \n                                </Row> <br></br>\n                                <Row> \n                                    <Col>\n                                        {!editar ? <a className=\"btn btn-info btn-sm rounded-0\" href={sitioWeb}>Sitio Web oficial</a> : \n                                            <Form.Group>\n                                                <label>Sitio Web</label>\n                                                <input className=\"form-control-sm form-control\" value={sitioWeb} onChange={e => setSitioWeb(e.target.value)}/>\n                                            </Form.Group>\n                                        }\n                                    </Col>  \n                                </Row>\n                                <hr></hr>\n                                <Row>\n                                    <Col>\n                                        {\n                                            tags.split(\",\").map(t => <Badge key={t} className=\"mr-2\" variant=\"secondary\">{t}</Badge>)\n                                        } \n                                    </Col>\n                                </Row>\n                                \n                                \n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md=\"7\">\n                        <Card className='rounded-0' style={{borderTop:\"solid 3px #184ca1\"}}>\n                            <Card.Body >\n                            {!editar? <Card.Title>{titulo}</Card.Title> : \n                            <Form.Group>\n                                <label>Título de tu rubro</label>\n                                <input className='form-control-sm form-control' value={titulo} onChange={e=> setTitulo(e.target.value)}/>\n                            </Form.Group>}\n                            <hr></hr>\n                            {editar ? \n                                <Form.Group>\n                                    <label>Descripcion extensa de tu negocio</label>\n                                    <Jodit \n                                            value={descripcion}\n                                            onChange={c => setDescripcion(c)}\n                                        /> \n                                    >\n                                </Form.Group>\n                                :\n                                <div dangerouslySetInnerHTML={{__html: descripcion}} />\n                            }\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default Perfil;\n\nfunction ModalFotoPerfil(props) {\n    const [show, setShow] = useState(false);\n    const [crop, setCrop] = useState({ aspect: 16 / 16 });  \n    const [pathTempFoto,setPathTempFoto] = useState(\"\");\n    const [originalName, setOriginalNAme] = useState(\"\");\n    const subirImagen = (imagen)=>{ \n        let formData = new FormData();\n        let headers = new Headers();\n        headers.append(\"Authorization\", localStorage.session)\n        formData.append(\"temp\", imagen); \n\n        fetch(config.url+\"/api/acount/profilephoto/\"+props.idUser,{\n            method:\"post\",\n            headers,\n            body: formData\n        })\n        .then(result => result.json())\n        .then(result =>{\n            console.log(result.originalName)\n            setOriginalNAme(result.originalName)\n            setPathTempFoto(config.url+result.path)\n        })\n    }\n    const sendResizeImage = (name)=>{\n        fetch(config.url+\"/api/acount/resizephotoperfil/\"+props.idUser,{\n            method:\"post\",\n            headers:{\n                Authorization:localStorage.session,\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                crop,\n                originalName:name\n            })\n        })\n        .then(result => {\n            if(result.status == 200)\n            {\n                window.location.reload()\n            }\n        }) \n    }\n\n    return (\n        <>\n        <Button onClick={() => setShow(true)} className=\"mr-3 rounded-0\" variant='outline-primary' size='sm'>Cambiar foto de perfil</Button>\n\n        <Modal show={show} onHide={()=>setShow(false)}>\n            <Modal.Header closeButton>\n                <Modal.Title>imagen</Modal.Title>\n            </Modal.Header>\n            <Modal.Body> \n                    <input type=\"file\" onChange={e=>{ \n                        subirImagen(e.target.files[0])\n                    }}/>\n                \n                <ReactCrop \n                    src={pathTempFoto} \n                    crop={crop} \n                    \n                    // onImageLoaded={image => setFoto(image)}\n                    onChange={(newCrop,percentCrop) => {\n                        console.log(percentCrop)\n                        setCrop(percentCrop)\n                    }}\n                />\n                {pathTempFoto?<small>Clickear y arrastrar en la foto para redimensionar</small>:null}\n            </Modal.Body>\n            <Modal.Footer>\n            <Button variant=\"secondary\" onClick={()=>setShow(false)}>\n                Cerrar\n            </Button>\n            <Button onClick={()=>sendResizeImage(originalName)} type=\"button\" variant='success'>Subir</Button>\n\n            </Modal.Footer>\n        </Modal>\n        </>\n    );\n}\n\nfunction ModalFotoPortada(props) {\n    const [show, setShow] = useState(false);\n    const [crop, setCrop] = useState({ aspect: 16 / 4 });  \n    const [pathTempFoto,setPathTempFoto] = useState(\"\");\n    const [originalName, setOriginalNAme] = useState(\"\");\n    const subirImagen = (imagen)=>{ \n        let formData = new FormData();\n        let headers = new Headers();\n        headers.append(\"Authorization\", localStorage.session)\n        formData.append(\"temp\", imagen); \n\n        fetch(config.url+\"/api/acount/portadaphoto/\"+props.idUser,{\n            method:\"post\",\n            headers,\n            body: formData\n        })\n        .then(result => result.json())\n        .then(result =>{\n            console.log(result.originalName)\n            setOriginalNAme(result.originalName)\n            setPathTempFoto(config.url+result.path)\n        })\n    }\n    const sendResizeImage = (name)=>{\n        fetch(config.url+\"/api/acount/resizephotoportada/\"+props.idUser,{\n            method:\"post\",\n            headers:{\n                Authorization:localStorage.session,\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                crop,\n                originalName:name\n            })\n        })\n        .then(result => {\n            if(result.status == 200)\n            {\n                window.location.reload()\n            }\n        }) \n    }\n\n    return (\n        <>\n        <Button onClick={() => setShow(true)} className=\"mr-3 rounded-0\" variant='outline-primary' size='sm'>Cambiar foto de portada</Button>\n\n        <Modal show={show} onHide={()=>setShow(false)}>\n            <Modal.Header closeButton>\n                <Modal.Title>imagen</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <input type=\"file\" onChange={e=>{ \n                    subirImagen(e.target.files[0])\n                }}/>\n                <ReactCrop \n                    src={pathTempFoto} \n                    crop={crop}  \n                    onChange={(newCrop,percentCrop) => {\n                        console.log(percentCrop)\n                        setCrop(percentCrop)\n                    }}\n                />\n                {pathTempFoto?<small>Clickear y arrastrar en la foto para redimensionar</small>:null}\n            </Modal.Body>\n            <Modal.Footer>\n            <Button variant=\"secondary\" onClick={()=>setShow(false)}>\n                Cerrar\n            </Button>\n            <Button onClick={()=>sendResizeImage(originalName)} type=\"button\" variant='success'>Subir</Button>\n            </Modal.Footer>\n        </Modal>\n        </>\n    );\n}","import React from 'react';\nimport { Container, Row, Col, Navbar, Card, Form, FormGroup, Button } from 'react-bootstrap';\n\nconst Home = ()=>{\n    return(\n        <React.Fragment>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-2\">\n                <Navbar.Brand href=\"#home\">O</Navbar.Brand>                \n            </Navbar> \n            <Container>\n                <Row className=\"pt-3\">\n                    <Col md=\"9\">\n                        <Row className=\"pb-3\">\n                            <Col md=\"12\">\n                                <Card style={{borderTop:\"solid 3px #2461b2\"}} className=\"rounded-0\">\n                                    <Card.Body>\n                                        <h5>Usuarios destacados</h5>\n                                        <Card>\n                                            ffff\n                                        </Card>\n                                    </Card.Body>\n                                </Card>\n                            </Col>                         \n                        </Row>\n                        <Row className=\"pb-3\">\n                            <Col>\n                                <Card className=\"rounded-0\">\n                                    <Card.Body>\n                                        <Form>\n                                            <FormGroup>\n                                                <label>Buscá lo que necesites, encontrá los proveedores</label>\n                                                <input className=\"form form-control rounded-0\" placeholder='herrería, obra, metal' />\n                                                <small className=\"text-muted\">Ingresa las palabras claves separadas por comas ,</small>\n                                            </FormGroup>\n                                        </Form>\n                                    </Card.Body>\n                                </Card>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col md=\"3\">                     \n                        <Row>\n                            <Col>\n                                <Card style={{borderTop:\"solid 3px #2461b2\"}} className=\"rounded-0\">\n                                    <Card.Header>\n                                        <h5> Buscás trabajo?</h5>\n                                    </Card.Header>\n                                    <Card.Body>\n                                        <a href='/#cargarcv' className=\"btn btn-danger rounded-0\">Publicá tu CV acá!</a><br></br>\n                                        <small>Se lo haremos llegar directamente a las empresas que forman parte de nuestro equipo</small>\n                                    </Card.Body>\n                                </Card> \n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react';\nimport {Container, Row, Form, Col, Card, Navbar, Button} from 'react-bootstrap'; \nimport config from '../config';\n\nconst Login = (props)=>{\n    const [userName,setUserName] = useState(\"\");\n    const [pass,setPass] = useState(\"\");\n    const [alert,setAlert] = useState(\"\");\n\n    const sendForm = e=>{\n        e.preventDefault();\n        fetch(config.url+\"/api/acount/login\",{\n            method:\"post\",\n            headers:{\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body:JSON.stringify({\n                userName,\n                pass\n            })\n        })\n        .then(data => {\n            if(data.status == 403)\n            {\n                setAlert(<h6 className=\"text-danger\">Datos incorrectos</h6>)\n            }\n            else if(data.status == 200)\n            {\n                data.json()\n                .then(data => {\n                    localStorage.session =  `Bearer ${data.token}`;\n                    //props.setUser({id:data.id,razonSocial:data.razonSocial})\n                    window.location = \"/\"\n                })\n            }\n        })\n        .catch(err => console.log(err))\n    }\n\n    return(\n        <div>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-2\">\n                <Navbar.Brand href=\"#home\">O</Navbar.Brand>                \n            </Navbar> \n            <Container>\n                <Row className=\"d-flex justify-content-center mt-5\">\n                    <Col md=\"6\">\n                        <Card className=\"rounded-0\">\n                            <Card.Body >\n                                <Card.Title>\n                                    Ingresar\n                                </Card.Title>\n                                {alert}\n                                <form onSubmit={sendForm}>\n                                    <Form.Group>\n                                        <small>Nombre de usuario</small>\n                                        <input onChange={e=>setUserName(e.target.value)} value={userName}\n                                            required type=\"text\" className=\"form form-control rounded-0\"/>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <small>Contraseña</small>\n                                        <input onChange={e=>setPass(e.target.value)} value={pass}\n                                            required type='password' className=\"form form-control rounded-0\"/>\n                                    </Form.Group>\n                                    <Row>\n                                        <Col>\n                                            <Button type=\"submit\" className=\"rounded-0\">Enviar</Button>\n                                        </Col>\n                                        <Col>\n                                            <a href=\"/#\">recuperar cuenta</a>\n                                        </Col>\n                                        <Col>\n                                            <a href=\"/#\">registrarse</a>\n                                        </Col>\n                                    </Row>\n                                </form>\n                                \n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport {Container, Row, Form, Col, Card, Navbar, Button} from 'react-bootstrap'; \nimport config from '../config';\n\nconst Registro = ()=>{\n    const [razonSocial,setRazonSocial] = React.useState(\"\")\n    const [userName,setUserName] = React.useState(\"\")\n    const [email, setEmail] = React.useState(\"\")\n    const [pass,setPass] = React.useState(\"\")\n    const [rPass,setrPass] = React.useState(\"\")\n    const [rPassBorder,setrPassBorder] = React.useState({})\n    const [rSocialBorder,setrSocialBorder] = React.useState({l:\"\", b:\"\"})\n    \n    const submitForm = e => {\n        e.preventDefault();\n        if(pass != rPass || pass.length < 6)\n        {\n            setrPassBorder({l:\"Las contraseñas deben coincidir y tener un mínimo de 6 caracteres\", c:\"danger\"})\n        }\n        else{\n            setrSocialBorder({l:\"\", b:\"\"})\n            fetch(config.url+\"/api/acount/registro\",{\n                method:\"post\",\n                headers:{\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body:JSON.stringify({\n                    userName,\n                    razonSocial,\n                    email,\n                    pass,\n                })\n            })\n            .then(data => {\n                if(data.status == 402)\n                {\n                    setrSocialBorder({l:\"El nombre de usuario se encuentra en uso\", b:\"border border-danger\"})\n                }else\n                if(data.status == 200)\n                {\n                    alert(\"Tu cuenta se ha creado exitosamente, solo resta activarla revisando tu email\")\n                    window.location = \"/#login\"\n                }\n            })\n            .catch(err => console.log(err))\n        }\n    }\n\n    return(\n        <div>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-2\">\n                <Navbar.Brand href=\"#home\">O</Navbar.Brand>                \n            </Navbar> \n            <Container>\n                <Row className=\"d-flex justify-content-center mt-5\">\n                    <Col md=\"6\">\n                        <Card className=\"rounded-0\">\n                            <Card.Body >\n                                <Card.Title>\n                                    Registrar nueva cuenta\n                                </Card.Title>\n                                <form onSubmit={submitForm}>\n                                    <Form.Group>\n                                        <label htmlFor=\"rsocial\">* Nombre de Usuario</label>\n                                        <input required value={userName} onChange={e => setUserName(e.target.value)}\n                                            id=\"rsocial\" type=\"text\" className={\"form form-control rounded-0 \"} required/>\n                                        <small className=\"text-muted\">Será necesario para acceder a tu cuenta</small>\n                                        <small className=\"text-muted\">{rSocialBorder.l}</small>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <label htmlFor=\"rsocial\">* Razón social</label>\n                                        <input required value={razonSocial} onChange={e => setRazonSocial(e.target.value)}\n                                            id=\"rsocial\" type=\"text\" className={\"form form-control rounded-0 \"} placeholder=\"Persona S.R.L\" required/>\n                                        <small className=\"text-muted\">Como querés que vean tu negocio</small>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <label htmlFor=\"email\">* Email</label>\n                                        <input value={email} onChange={e => setEmail(e.target.value)}\n                                            required type=\"email\" id=\"email\" className={\"form form-control rounded-0 \"+rSocialBorder.b}\n                                            placeholder=\"info@ejemplo.com\"/>\n                                        \n                                    </Form.Group> \n                                    <Form.Group>\n                                        <label htmlFor=\"pass\">Contraseña</label>\n                                        <input min={6} value={pass} onChange={e => setPass(e.target.value)}\n                                            onKeyUp={\n                                                ()=> {pass == rPass? setrPassBorder(\"success\") : setrPassBorder(\"danger\")}\n                                            }\n                                            required type='password' id=\"pass\" className=\"form form-control rounded-0\"/>\n                                    </Form.Group>\n                                    <Form.Group onKeyUp={\n                                        ()=> {pass == rPass? setrPassBorder({l:\"\", c:\"success\"}) : setrPassBorder({l:\"Las contraseñas deben coincidir y tener un mínimo de 6 caracteres\", c:\"danger\"})}\n                                    }>\n                                        <label htmlFor=\"rpass\">Repetir Contraseña</label>\n                                        <input min={6} value={rPass} onChange={e => setrPass(e.target.value)}\n                                             required type='password' id=\"rpass\" className={`form form-control rounded-0 border border-${rPassBorder.c}`}/>\n                                        <small className=\"text-danger\">{rPassBorder.l}</small>\n                                    </Form.Group>\n                                    <Row>\n                                        <Col>\n                                            <Button type=\"submit\" className=\"rounded-0\">Enviar</Button>\n                                        </Col> \n                                    </Row>\n                                </form>                                \n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    )\n}\n\nexport default Registro;","import React, { useState } from 'react';\nimport { Container, Row, Col, Card, Navbar, Button, Form, Badge, Modal } from 'react-bootstrap';\nimport config from '../config'\nconst CargaCv = () => {\n    const [nombre, setNombre] = useState(\"\");\n    const [telefono, setTelefono] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [tags, setTags] = useState(\"\");\n    const [archivo, setArchivo] = useState(null) \n    const [claveSeguridad, setClaveSeguridad] = useState(\"\") \n    const [classBorder, setClassBorder] = useState(\"\") \n\n    const enviar = e=>{\n        e.preventDefault();\n        let headers = new Headers();\n        let fd = new FormData()\n        headers.append('Accept', 'application/json')\n        headers.append('Content-Type', 'application/json')\n        fd.append(\"cv\", archivo);\n        fd.append(\"user\", JSON.stringify({\n            nombre,\n            telefono,\n            email,\n            tags\n        }))\n\n        fetch(config.url+'/api/curriculum?key='+claveSeguridad,{\n            method:\"POST\",\n            //headers,\n            body:fd\n        })\n        .then(data => {\n            if(data.status == 201)\n            {\n                alert(\"Correcto: Te hemos enviado un email\")\n                window.location = \"/#\"\n            }\n            else if(data.status == 403)\n            {\n                setClassBorder(\"border-danger\")\n            }\n        })\n    }\n\n    return(\n        <React.Fragment>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-2\">\n                <Navbar.Brand href=\"#home\">O</Navbar.Brand>                \n            </Navbar>\n            <Container>\n                <Row className=\"d-flex justify-content-center mt-4\">\n                    <Col md='8'>\n                        <Card>\n                            <Card.Body>\n                                <Card.Title>Adjuntanos tu Currículum</Card.Title> \n                                {classBorder ? <h6 className='text-danger'>El email está registrado y no se ingresó una clave de seguridad válida</h6>:null}        \n                                <Form onSubmit={enviar}>\n                                    <Form.Group>\n                                        <label htmlFor='Nombre'>Nombre completo *</label>\n                                        <Form.Control required autoComplete='off' value={nombre} onChange={e=>setNombre(e.target.value)} id='Nombre' size='sm' className='rounded-0' type='text' />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <label htmlFor='Telefono'>Teléfono *</label>\n                                        <Form.Control required autoComplete='off' value={telefono} onChange={e=>setTelefono(e.target.value)} id='Telefono' size='sm' className='rounded-0' type='tel' />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <label htmlFor='Email'>Email *</label>\n                                        <Form.Control required autoComplete='off' value={email} onChange={e=>setEmail(e.target.value)} id='Email' size='sm' className={'rounded-0 '+classBorder} type='email' />\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <label htmlFor='Tags'>Palabras claves sobre tu orientación vocacional, separado por comas, *</label>\n                                        <Form.Control required autoComplete='off' value={tags} onChange={e=>setTags(e.target.value)} autoComplete='off' id='Tags' size='sm' className='rounded-0' type='text' />\n                                        <label>{tags.split(\",\").map(t => <Badge key={t+\"_\"} className='mr-1' variant='info'>{t.trim()}</Badge>)}</label>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Row>\n                                            <Col md=\"6\">\n                                                <label htmlFor='Archivo'>Cargar archivo: PDF, o tipo Word</label>\n                                                <Form.Control onChange={e=>setArchivo(e.target.files[0])} required id='Archivo' size='sm' className='rounded-0' type='file' accept='.pdf, .doc, .docx, .odt, .doc' />\n                                            </Col>\n                                            <Col md=\"6\">\n                                                <label htmlFor='clave'>Clave de Seguridad (opcional)</label>\n                                                <Form.Control onChange={e=>setClaveSeguridad(e.target.value)} value={claveSeguridad} id='clave' size='sm' className={'rounded-0 '+classBorder} />\n                                                <small>(solo en caso de querer editar la información)</small>\n                                            </Col>\n                                        </Row>\n                                    </Form.Group>\n                                    <Form.Group>\n                                        <Button type=\"submit\" variant='primary' className=\"rounded-0\">Enviar</Button>\n                                        <RecuperoClave></RecuperoClave>\n                                    </Form.Group>\n                                </Form>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nconst RecuperoClave = ()=> {\n    const [show, setShow] = useState(false);\n    const [email, setEmail] = useState(\"\");\n  \n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const enviar = ()=>{\n        fetch(config.url+\"/api/curriculum/recuperoclave?email=\"+email,{\n            method:\"post\"\n        })\n        .then(res=>{\n            if(res.status == 200)\n            {\n                alert(\"Te enviamos un email con la nueva clave\");\n                handleClose();\n            }\n        })\n    }\n    \n  \n    return (\n      <> \n        <Button type=\"submit\" onClick={handleShow} variant='secondary' className=\"rounded-0 ml-2\">Generar una nueva clave</Button>\n  \n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Recuperar clave</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n              <label>Ingresar Email</label>\n              <Form.Control className='rounded-0' value={email} onChange={e => setEmail(e.target.value)}></Form.Control></Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" className='rounded-0 ml-1' onClick={handleClose}>\n              Cerrar\n            </Button>\n            <Button variant=\"primary\" className='rounded-0' onClick={enviar}>\n              Enviar\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      </>\n    );\n  }\n\nexport default CargaCv;","import React from 'react';\nimport { Row, Container, Card, Col, Navbar } from 'react-bootstrap';\n\nconst MailConfirmado = ()=>{\n    return(\n        <React.Fragment>\n            <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className=\"mb-2\">\n                <Navbar.Brand href=\"#home\">O</Navbar.Brand>                \n            </Navbar>\n            <Container className='mt-5'>\n                <Row>\n                    <Col>\n                        <Card className='rounded-0'>\n                            <Card.Body>\n                                <Card.Title>\n                                    Hemos validado tu email correctamente.\n                                </Card.Title>\n                                <Card.Text>\n                                    Tu cuenta ya se encuentra activada para ingresar.\n                                </Card.Text>\n                                <a className='btn btn-primary rounded-0' href='/#login'>\n                                    Ir al login\n                                </a>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </React.Fragment>\n    )\n}\n\nexport default MailConfirmado;","import React, { useState, useEffect, forceUpdate } from 'react'; \nimport {Button, Navbar, Nav, NavDropdown, Form, FormControl, Container, Row, Col} from 'react-bootstrap';\nimport Perfil from './controllers/perfil';\nimport Home from './controllers/home';\nimport './generalStyle.css'\nimport {FaHandsHelping, FaRegBuilding, FaRegAddressCard, FaRegQuestionCircle, FaUserTie} from 'react-icons/fa';\nimport {IoMdNotificationsOutline, IoIosLogOut} from 'react-icons/io'\nimport logoSitio from './logos/Marca-03.png'\nimport config from './config';\nimport Login from './controllers/login';\nimport Registro from './controllers/registro'; \nimport CargaCv from './controllers/cargarCv';\nimport MailConfirmado from './controllers/mailConfirmado';\n\nfunction useForceUpdate(){\n    const [value, setValue] = useState(0); // integer state\n    return () => setValue(value => ++value); // update the state to force render\n}\n\nexport default ()=>{\n    const [ruta,setRuta] = useState(window.location.hash.slice(1));\n    const [user, setUser] = useState({id:\"\",razonSocial:\"\",rol:\"\"});\n    const [body, setBody] = useState(<div></div>)\n    useEffect(()=>{ \n        fetch(config.url+'/api/acount',{ \n            headers:{\n                \"raw\":\"json\",\n                Authorization:localStorage.session\n            }\n        })\n        .then(data => {\n            data.json()\n            .then(d =>  setUser({id:d.id,razonSocial:d.nombre, rol:d.rol})) \n        })\n        let retBody= ()=>{ \n\n            let ruta = window.location.hash.slice(1);\n            let rutaSliced = ruta.split(\"/\");\n            \n            console.log(\"ruta\", rutaSliced)\n            if(!window.location.hash)\n            {\n                setBody(<Home></Home>)\n            }\n            else if(rutaSliced[0] == \"login\")\n            {\n                setBody(<Login/>)\n            }\n            else if(rutaSliced[0] == \"registro\")\n            {\n                setBody(<Registro/>)\n            }\n            else if(rutaSliced[0] == \"validado\")\n            {\n                setBody(<MailConfirmado/>)\n            }\n            else if(rutaSliced[0] == \"cargarcv\")\n            {\n                setBody(<CargaCv/>)\n            }\n            else if(rutaSliced[0] == \"profile\" && !isNaN(rutaSliced[1]))\n            {\n                setBody(<Perfil/>)\n            } \n        }\n        window.addEventListener(\"hashchange\", retBody)\n        window.addEventListener(\"load\", retBody)\n    },[]) \n\n    return(\n    <React.Fragment> \n            <Navbar bg='light' expand=\"lg\" variant=\"light\" className=\"fixed-top\">\n                <Navbar.Brand href=\"#\"><img width='120' src={logoSitio}/></Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-auto ml-auto\">\n                        <Nav.Link href=\"#empresas\"><FaRegBuilding/> Empresas</Nav.Link>\n                        <Nav.Link href=\"#autonomos\"><FaHandsHelping/> Autónomos</Nav.Link>\n                        {user.rol > 0 ? <Nav.Link href=\"#cv\"><FaRegAddressCard/> CV Postulantes</Nav.Link> : null}\n                        <Nav.Link href=\"#info\"><FaRegQuestionCircle/> Quienes somos</Nav.Link>\n                    </Nav>\n                    <Nav className=\"mr-0\"> \n                    <Nav.Link href=\"#link\"><IoMdNotificationsOutline/></Nav.Link>\n                        <NavDropdown title={\n                            user.id ? user.razonSocial : \"Cuenta\"\n                        } id=\"basic-nav-dropdown\" alignRight>\n                            {user.id ?                                    \n                                (<React.Fragment>\n                                    <NavDropdown.Item  onClick={()=>{\n                                        window.location = \"#profile/\"+user.id\n                                        window.location.reload()\n                                    }}><FaUserTie/> Mi perfil </NavDropdown.Item>\n                                    <NavDropdown.Item onClick={()=>{\n                                        localStorage.session = \"\"\n                                        window.location.reload()\n                                    }}><IoIosLogOut/> Logout </NavDropdown.Item>\n                                </React.Fragment>)\n                                :                               \n                                \n                                (<React.Fragment>\n                                    <NavDropdown.Item href=\"#login\">  Ingresar </NavDropdown.Item>\n                                    <NavDropdown.Item href=\"#registro\">  Registrarse </NavDropdown.Item>\n                                </React.Fragment>)\n                                \n                            }\n                        </NavDropdown>\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>        \n            {body} \n    </React.Fragment>\n    )\n} \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}